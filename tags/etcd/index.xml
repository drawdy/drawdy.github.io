<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>etcd on 天行健 君子以自强不息</title><link>https://blog.pearlfisher.xyz/tags/etcd/</link><description>Recent content in etcd on 天行健 君子以自强不息</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 13 Jun 2021 23:07:51 +0800</lastBuildDate><atom:link href="https://blog.pearlfisher.xyz/tags/etcd/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes API Server 从入门到入库（上）</title><link>https://blog.pearlfisher.xyz/blog/kube-apiserver-1/</link><pubDate>Sun, 13 Jun 2021 23:07:51 +0800</pubDate><guid>https://blog.pearlfisher.xyz/blog/kube-apiserver-1/</guid><description>Kubernetes API Server 负责验证和配置 Kubernetes API对象，提供了 RESTful API供用户和其他组件与 Kubernetes 交互。Kubernetes API Server 源码编译出的程序为 kube-apiserver，本质上是一个 HTTP 服务器程序，使用 go 语言提供的 http 库可以很方便的创建并运行。如下面的代码所示，监听地址（Addr）和处理方法（Handler）是创建 HTTP 服务必要的参数。
server := http.Server:{ Addr: addr, Handler: handler, } Addr 是 TCP 协议地址，格式为host:port。port 表示端口，值为 1~ 65535 范围内的整数，其中 1 ~ 1023 是保留端口，不可以随便使用，用户可以从 1024 ~ 65535 中选取任意一个没有被占用的数作为端口。 host 可以是 IP， 也可以是能够解析为 IP 的主机名。host 为 IP 时有三种情况：为回环地址（127.0.0.1）时，只能在本地通过 127.0.0.1 加端口访问服务；为 0.0.0.0 或者直接省略 host 只保留:port时，表示监听本机的所有 IP，从网络可达的其他主机上通过任何本机 IP加端口都可以访问服务；最常见的是指定为某个固定的 IP，如 192.168.1.10，表示可以通过该 IP 加端口访问到服务。
Handler 是 HTTP 服务器程序的核心，是处理请求、返回响应的过程。HTTP 服务器通常会对多个路径提供服务，每个路径都对应一个 Handler，最外层的 Handler 通常称为路由器，负责解析请求消息，找到并调用路径对应的 Handler。</description></item></channel></rss>